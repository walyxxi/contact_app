{"version":3,"sources":["components/Navbar/index.js","components/Content/index.js","actions/index.js","constants/ActionTypes.js","components/FormAdd/index.js","components/FormEdit/index.js","App.js","reducers/index.js","reducers/app.js","serviceWorker.js","index.js"],"names":["IconMenu","styled","MdMenu","IconAdd","MdAdd","Navbar","props","handleShowFormAdd","className","size","onClick","IconSearch","MdSearch","IconEdit","MdModeEdit","IconDelete","MdDelete","Content","datas","handleShowFormEdit","setDataEdit","deleteData","useState","searchData","setSearchData","filterData","filter","item","firstName","lastName","toLowerCase","startsWith","trim","color","onChange","e","target","value","map","data","idx","key","height","width","src","photo","alt","age","id","window","confirm","then","res","message","alert","API_URL","loadData","dispatch","fetch","json","result","type","catch","err","addData","method","body","JSON","stringify","addDataSuccess","deleteDataSuccess","editData","editDataSuccess","FormAdd","dataAdd","setDataAdd","handleInputChange","name","placeholder","required","FormEdit","dataEdit","useEffect","disabled","preventDefault","parseInt","connect","state","actions","bindActionCreators","DataActions","showFormAdd","setShowFormAdd","showFormEdit","setShowFormEdit","rootReducer","combineReducers","action","edit","x","Boolean","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.fa9eb16b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport { MdMenu, MdAdd } from \"react-icons/md\";\nimport styled from \"styled-components\";\n\nconst IconMenu = styled(MdMenu)`\n  cursor: pointer;\n`;\n\nconst IconAdd = styled(MdAdd)`\n  cursor: pointer;\n`;\n\nconst Navbar = (props) => {\n  const { handleShowFormAdd } = props;\n\n  return (\n    <nav className=\"Navbar\">\n      <IconMenu size=\"20px\" />\n      Contact Apps\n      <IconAdd onClick={handleShowFormAdd} size=\"20px\" />\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { MdSearch, MdModeEdit, MdDelete } from \"react-icons/md\";\nimport styled from \"styled-components\";\n\nconst IconSearch = styled(MdSearch)`\n  margin-left: 6px;\n  position: absolute;\n  top: 8px;\n`;\n\nconst IconEdit = styled(MdModeEdit)`\n  cursor: pointer;\n  margin: 4px;\n`;\n\nconst IconDelete = styled(MdDelete)`\n  cursor: pointer;\n  margin: 4px;\n`;\n\nconst noImageURL =\n  \"https://digitalfinger.id/wp-content/uploads/2019/12/no-image-available-icon-6-600x375.png\";\n\nconst Content = (props) => {\n  const { datas, handleShowFormEdit, setDataEdit, deleteData } = props;\n\n  const [searchData, setSearchData] = useState(\"\");\n\n  let filterData = datas;\n\n  if (searchData !== \"\") {\n    filterData = datas.filter(\n      (item) =>\n        (item.firstName + \" \" + item.lastName)\n          .toLowerCase()\n          .startsWith(searchData.trim().toLowerCase()) ||\n        item.lastName.toLowerCase().startsWith(searchData.trim().toLowerCase())\n    );\n  }\n\n  const handleDeleteData = (id) => {\n    const confirm = window.confirm(\"Are you sure?\");\n    if (confirm) {\n      deleteData(id).then((res) => {\n        if (res.message === \"contact unavailable\") {\n          alert(\"Bad request, \" + res.message + \"!\");\n        }\n      });\n    }\n  };\n\n  const handleSearchData = (e) => {\n    setSearchData(e.target.value);\n  };\n\n  return (\n    <div className=\"Content\">\n      <div className=\"InputBox\">\n        <IconSearch size=\"20px\" color=\"#cf7500\" />\n        <input className=\"InputSearch\" onChange={handleSearchData} />\n      </div>\n      {filterData &&\n        filterData.map((data, idx) => (\n          <div className=\"ContactList\" key={idx}>\n            <img\n              height=\"75px\"\n              width=\"38%\"\n              src={data.photo === \"N/A\" ? noImageURL : data.photo}\n              alt=\"\"\n            />\n            <div className=\"ContactCaption\">\n              <div className=\"ContactName\">\n                {data.firstName} {data.lastName}\n              </div>\n              <div className=\"ContactAge\">Age {data.age} years</div>\n            </div>\n            <div className=\"ContactEdit\">\n              <IconEdit\n                onClick={() => {\n                  setDataEdit(data);\n                  handleShowFormEdit();\n                }}\n                size=\"18px\"\n                color=\"#cf7500\"\n              />\n              <IconDelete\n                onClick={() => handleDeleteData(data.id)}\n                size=\"18px\"\n                color=\"#cf7500\"\n              />\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Content;\n","import * as types from \"../constants/ActionTypes\";\n\nconst API_URL = \"https://simple-contact-crud.herokuapp.com/contact\";\n\nconst loadDataSuccess = (datas) => {\n  return { type: types.LOAD_DATA_SUCCESS, datas };\n};\n\nconst loadDataFailure = () => {\n  return { type: types.LOAD_DATA_FAILURE };\n};\n\nexport const loadData = () => {\n  return (dispatch) => {\n    return fetch(API_URL)\n      .then((res) => res.json())\n      .then((result) => {\n        dispatch(loadDataSuccess(result.data));\n      })\n      .catch((err) => {\n        dispatch(loadDataFailure());\n      });\n  };\n};\n\nconst addDataSuccess = (data) => {\n  return { type: types.ADD_DATA_SUCCESS, data };\n};\n\nconst addDataFailure = () => {\n  return { type: types.ADD_DATA_FAILURE };\n};\n\nexport const addData = (data) => {\n  return (dispatch) => {\n    return fetch(API_URL, {\n      method: \"POST\",\n      \"Content-Type\": \"application/json\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.message === \"contact saved\") {\n          dispatch(addDataSuccess(data));\n        } else {\n          dispatch(addDataFailure());\n        }\n        return result;\n      })\n      .catch((err) => {\n        dispatch(addDataFailure());\n      });\n  };\n};\n\nconst deleteDataSuccess = (id) => {\n  return { type: types.DELETE_DATA_SUCCESS, id };\n};\n\nconst deleteDataFailure = () => {\n  return { type: types.DELETE_DATA_FAILURE };\n};\n\nexport const deleteData = (id) => {\n  return (dispatch) => {\n    return fetch(`${API_URL}/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.message === \"contact unavailable\") {\n          dispatch(deleteDataFailure());\n        } else {\n          dispatch(deleteDataSuccess(id));\n        }\n        return result;\n      })\n      .catch((err) => {\n        dispatch(deleteDataFailure());\n      });\n  };\n};\n\nconst editDataSuccess = (data) => {\n  return { type: types.EDIT_DATA_SUCCESS, data };\n};\n\nconst editDataFailure = () => {\n  return { type: types.EDIT_DATA_FAILURE };\n};\n\nexport const editData = (data) => {\n  return (dispatch) => {\n    return fetch(`${API_URL}/${data.id}`, {\n      method: \"PUT\",\n      \"Content-Type\": \"application/json\",\n      body: JSON.stringify({\n        firstName: data.firstName,\n        lastName: data.lastName,\n        age: data.age,\n        photo: data.photo,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.message === \"Contact edited\") {\n          dispatch(editDataSuccess(result.data));\n        } else {\n          dispatch(editDataFailure());\n        }\n        return result;\n      })\n      .catch((err) => {\n        dispatch(editDataFailure());\n      });\n  };\n};\n","export const LOAD_DATA = \"LOAD_DATA\";\nexport const LOAD_DATA_SUCCESS = \"LOAD_DATA_SUCCESS\";\nexport const LOAD_DATA_FAILURE = \"LOAD_DATA_FAILURE\";\n\nexport const ADD_DATA = \"ADD_DATA\";\nexport const ADD_DATA_SUCCESS = \"ADD_DATA_SUCCESS\";\nexport const ADD_DATA_FAILURE = \"ADD_DATA_FAILURE\";\n\nexport const EDIT_DATA = \"EDIT_DATA\";\nexport const EDIT_DATA_SUCCESS = \"EDIT_DATA_SUCCESS\";\nexport const EDIT_DATA_FAILURE = \"EDIT_DATA_FAILURE\";\n\nexport const DELETE_DATA = \"DELETE_DATA\";\nexport const DELETE_DATA_SUCCESS = \"DELETE_DATA_SUCCESS\";\nexport const DELETE_DATA_FAILURE = \"DELETE_DATA_FAILURE\";\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { MdAdd } from \"react-icons/md\";\n\nconst FormAdd = (props) => {\n  const { addData, handleShowFormAdd } = props;\n\n  const [dataAdd, setDataAdd] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    age: null,\n    photo: \"\",\n  });\n\n  const { firstName, lastName, age, photo } = dataAdd;\n\n  const handleInputChange = (e) => {\n    setDataAdd({ ...dataAdd, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmitData = (e) => {\n    addData(dataAdd).then((res) => {\n      handleShowFormAdd();\n      setDataAdd({\n        firstName: \"\",\n        lastName: \"\",\n        age: null,\n        photo: \"\",\n      });\n    });\n  };\n\n  return (\n    <div className=\"FormEl\">\n      <div className=\"FormTitle\">\n        <MdAdd color=\"#fff\" size=\"20px\" />\n        &nbsp;Add Contact\n      </div>\n      <div className=\"FormAdd\">\n        <div className=\"InputGroup\">\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            type=\"text\"\n            value={firstName}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            type=\"text\"\n            value={lastName}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"age\"\n            placeholder=\"Age\"\n            type=\"number\"\n            value={age}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"photo\"\n            placeholder=\"Photo\"\n            value={photo}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"ButtonGroup\">\n          <div onClick={handleShowFormAdd} className=\"ButtonCancel\">\n            Cancel\n          </div>\n          <div onClick={handleSubmitData} className=\"ButtonSubmit\">\n            Submit\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormAdd;\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport { MdEdit } from \"react-icons/md\";\n\nconst FormEdit = (props) => {\n  const { data, editData, handleShowFormEdit } = props;\n  const [dataEdit, setDataEdit] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    age: 0,\n    photo: \"\",\n  });\n\n  useEffect(() => {\n    setDataEdit({\n      id: data.id,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      age: data.age,\n      photo: data.photo,\n    });\n  }, [data]);\n\n  const { id, firstName, lastName, age, photo } = dataEdit;\n\n  const handleInputChange = (e) => {\n    setDataEdit({ ...dataEdit, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmitData = (e) => {\n    e.preventDefault();\n    editData({\n      id: dataEdit.id,\n      firstName: dataEdit.firstName,\n      lastName: dataEdit.lastName,\n      age: parseInt(dataEdit.age),\n      photo: dataEdit.photo,\n    }).then((res) => {\n      handleShowFormEdit();\n    });\n  };\n\n  return (\n    <div className=\"FormEl\">\n      <div className=\"FormTitle\">\n        <MdEdit color=\"#fff\" size=\"20px\" />\n        &nbsp;Edit Contact\n      </div>\n      <div className=\"FormEdit\">\n        <div className=\"InputGroup\">\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"id\"\n            placeholder=\"ID\"\n            type=\"text\"\n            value={id}\n            disabled\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"firstName\"\n            placeholder=\"First Name\"\n            type=\"text\"\n            value={firstName}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"lastName\"\n            placeholder=\"Last Name\"\n            type=\"text\"\n            value={lastName}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"age\"\n            placeholder=\"Age\"\n            type=\"number\"\n            value={age}\n            required\n          />\n          <input\n            className=\"Input\"\n            onChange={handleInputChange}\n            name=\"photo\"\n            placeholder=\"Photo\"\n            value={photo}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"ButtonGroup\">\n          <div onClick={handleShowFormEdit} className=\"ButtonCancel\">\n            Cancel\n          </div>\n          <div onClick={handleSubmitData} className=\"ButtonSubmit\">\n            Update\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormEdit;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Content from \"./components/Content\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as DataActions from \"./actions\";\nimport FormAdd from \"./components/FormAdd\";\nimport FormEdit from \"./components/FormEdit\";\n\nconst App = (props) => {\n  const { datas, actions } = props;\n\n  useEffect(() => {\n    actions.loadData();\n  }, [actions]);\n\n  const [showFormAdd, setShowFormAdd] = useState(false);\n  const [showFormEdit, setShowFormEdit] = useState(false);\n  const [dataEdit, setDataEdit] = useState();\n\n  const handleShowFormAdd = () => {\n    setShowFormAdd(!showFormAdd);\n  };\n\n  const handleShowFormEdit = () => {\n    setShowFormEdit(!showFormEdit);\n  };\n\n  return (\n    <div className=\"Container\">\n      {/* Navbar */}\n      <Navbar handleShowFormAdd={handleShowFormAdd} />\n\n      {/* Content */}\n      <Content\n        datas={datas}\n        setDataEdit={setDataEdit}\n        handleShowFormEdit={handleShowFormEdit}\n        deleteData={actions.deleteData}\n      />\n\n      {/* FormAdd */}\n      {showFormAdd && (\n        <FormAdd\n          addData={actions.addData}\n          handleShowFormAdd={handleShowFormAdd}\n        />\n      )}\n\n      {/* FormEdit */}\n      {showFormEdit && dataEdit && (\n        <FormEdit\n          data={dataEdit}\n          editData={actions.editData}\n          handleShowFormEdit={handleShowFormEdit}\n        />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    datas: state.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    actions: bindActionCreators(DataActions, dispatch),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport data from \"./app\";\n\nconst rootReducer = combineReducers({ data });\n\nexport default rootReducer;\n","import * as types from \"../constants/ActionTypes\";\n\nexport default function data(state = [], action) {\n  switch (action.type) {\n    case types.LOAD_DATA_SUCCESS:\n      return action.datas;\n\n    case types.LOAD_DATA_FAILURE:\n      return state;\n\n    case types.ADD_DATA_SUCCESS:\n      return [\n        {\n          firstName: action.data.firstName,\n          lastName: action.data.lastName,\n          age: action.data.age,\n          photo: action.data.photo,\n        },\n        ...state,\n      ];\n\n    case types.ADD_DATA_FAILURE:\n      return state;\n\n    case types.EDIT_DATA_SUCCESS:\n      let editData = state;\n      let edit = editData.map((x) => {\n        if (x.id === action.data.id) {\n          x.firstName = action.data.firstName;\n          x.lastName = action.data.lastName;\n          x.age = action.data.age;\n          x.photo = action.data.photo;\n        }\n        return x;\n      });\n      return edit;\n\n    case types.EDIT_DATA_FAILURE:\n      return state;\n\n    case types.DELETE_DATA_SUCCESS:\n      return state.filter((data) => data.id !== action.id);\n\n    case types.DELETE_DATA_FAILURE:\n      return state;\n\n    default:\n      return state;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport rootReducer from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}